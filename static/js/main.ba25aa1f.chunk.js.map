{"version":3,"sources":["components/collectItemsToDisplay/collectItemsToDisplay.js","components/ProductFood/ProductFood.jsx","components/ExtraFood/ExtraFood.js","components/ExtraFoodData/ExtraFoodData.js","components/ExtraFoodTabl/ExtraFoodTabl.jsx","components/Grill/Grill.jsx","AppGrillData.js","index.js"],"names":["collectItemsToDisplay","props","usedItems","remainingItems","singleCycle","positionCount","busyWidth","maxRowHeight","minHeightElement","minwidhtElement","grillItems","forEach","element","index","height","push","width","position","widht","heightAftterUpdate","isAddedMoreThanOneItem","increaseHeight","isNeedCheckSmallerSize","amountOfItems","reaminingHeight","selectedColumn","find","item","elementToAdd","indexToRemove","findIndex","splice","result","filter","itemNotAdded","freeSquare","length","data","items","busyHeight","ProductFood","row","map","elem","id","className","style","float","ExtraFood","elements","foodData","display","justifyContent","marginLeft","title","ExtraFoodData","ExtraFoodTabl","Grill","data2","dataInTable","color","errorMessage","rows","cols","defaultValue","onChange","updateValueText","AppGrillData","useState","setErrorMessage","grill","count","setData","newObj","JSON","stringify","newData","parse","i","sort","a","b","event","obj","target","value","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba25aa1f.chunk.js","sourcesContent":["export function collectItemsToDisplay(props) {\r\n  let usedItems = [];\r\n  let remainingItems = [];\r\n  let singleCycle = [];\r\n\r\n  let positionCount = 0;\r\n\r\n  let busyWidth = 0;\r\n  let maxRowHeight = 0;\r\n  let minHeightElement = 0;\r\n  let minwidhtElement = 0;\r\n\r\n  props.grillItems.forEach((element, index) => {\r\n    if (element.height > props.height) {\r\n      remainingItems.push(element);\r\n    } else if (element.width + busyWidth <= props.width) {\r\n      minHeightElement = element.height;\r\n      minwidhtElement = element.width;\r\n      busyWidth += element.width;\r\n      maxRowHeight =\r\n        maxRowHeight !== 0 && maxRowHeight > element.height\r\n          ? maxRowHeight\r\n          : element.height;\r\n\r\n      singleCycle.push({\r\n        position: positionCount + 1,\r\n        widht: element.width,\r\n        height: element.height,\r\n        heightAftterUpdate: element.height,\r\n        isAddedMoreThanOneItem: false,\r\n      });\r\n\r\n      usedItems.push(element);\r\n\r\n      positionCount++;\r\n    } else {\r\n      remainingItems.push(element);\r\n    }\r\n  });\r\n\r\n  let increaseHeight = minHeightElement;\r\n  let isNeedCheckSmallerSize = false;\r\n  let amountOfItems = 0;\r\n\r\n  while (remainingItems.length > 0) {\r\n    let reaminingHeight = maxRowHeight - increaseHeight;\r\n\r\n    //ищем ту колонку которую нужно увеличить\r\n    let selectedColumn;\r\n    if (isNeedCheckSmallerSize) {\r\n      selectedColumn = singleCycle.find(\r\n        ({ height }) => height <= increaseHeight\r\n      );\r\n\r\n      amountOfItems--;\r\n      if (amountOfItems === 0) {\r\n        break;\r\n      }\r\n    } else {\r\n      selectedColumn = singleCycle.find(\r\n        (item) => item.heightAftterUpdate <= increaseHeight\r\n      );\r\n    }\r\n\r\n    if (selectedColumn) {\r\n      //ищем какой квадартик нужно добавить по высоте\r\n      const elementToAdd = remainingItems.find(\r\n        (item, index) => item.height === selectedColumn.height\r\n      );\r\n\r\n      if (!elementToAdd) {\r\n        break;\r\n      }\r\n\r\n      if (reaminingHeight >= elementToAdd.height) {\r\n        usedItems.push(elementToAdd);\r\n\r\n        //увеличиваем на выосту добавленого элемента значение в колонке\r\n        if (!isNeedCheckSmallerSize) {\r\n          selectedColumn.heightAftterUpdate += elementToAdd.height;\r\n          selectedColumn.isAddedMoreThanOneItem = true;\r\n        }\r\n\r\n        //удаляем уже добавленный елемент из списка доступных\r\n        const itemToRemove = (item) => item.height === elementToAdd.height;\r\n        let indexToRemove = remainingItems.findIndex(itemToRemove);\r\n        remainingItems.splice(indexToRemove, 1);\r\n      } else {\r\n        const result = singleCycle.filter(\r\n          (itemNotAdded) => !itemNotAdded.isAddedMoreThanOneItem\r\n        );\r\n        let freeSquare =\r\n          reaminingHeight * (props.width - result.length * result[0].widht);\r\n        amountOfItems = freeSquare / (minwidhtElement * minHeightElement) + 1;\r\n        isNeedCheckSmallerSize = true;\r\n        increaseHeight = minHeightElement;\r\n      }\r\n    } else {\r\n      if (!isNeedCheckSmallerSize) {\r\n        increaseHeight += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  let data = [];\r\n  data.push({ items: usedItems, busyHeight: maxRowHeight });\r\n  data.push({ items: remainingItems, busyHeight: props.height - maxRowHeight });\r\n  return data;\r\n}","import React from \"react\";\r\nimport \"./ProductFood.css\";\r\n\r\nexport function ProductFood(props) {\r\n  return props.row.map((elem, index) => {\r\n    return (\r\n      <div\r\n        key={index}\r\n        id=\"productFood\"\r\n        className=\"productFood\"\r\n        style={{\r\n          float: \"left\",\r\n          width: elem.width,\r\n          height: elem.height,\r\n        }}\r\n      ></div>\r\n    );\r\n  });\r\n}\r\n","import React from \"react\";\r\n\r\nexport function ExtraFood(props) {\r\n  const elements = props.foodData.map((elem) => (\r\n    <>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n        <span style={{ marginLeft: \"28px\", width: \"100px\" }}>{elem.title}</span>\r\n        <span style={{ marginLeft: \"30px\", width: \"100px\" }}>\r\n          {elem.width}x{elem.height}\r\n        </span>\r\n      </div>\r\n      <hr style={{ width: \"220px\" }} />\r\n    </>\r\n  ));\r\n\r\n  return <>{elements}</>;\r\n}\r\n","import React from \"react\";\r\nimport { ExtraFood } from \"../ExtraFood/ExtraFood\";\r\n\r\nexport function ExtraFoodData(props) {\r\n  const foodData = props.grillItems.map((elem) => {\r\n    return { title: elem.title, width: elem.width, height: elem.height };\r\n  });\r\n\r\n  return <ExtraFood foodData={foodData} />;\r\n}\r\n","import React from \"react\";\r\nimport \"./ExtraFoodTabl.css\";\r\nimport { ExtraFoodData } from \"../ExtraFoodData/ExtraFoodData\";\r\n\r\nexport function ExtraFoodTabl(props) {\r\n  return (\r\n    <div>\r\n      <p>items out of grill</p>\r\n      <div className=\"extraFoodTabl\">\r\n        <div className=\"typeSize\">\r\n          <span className=\"type\">Type</span>\r\n          <span className=\"size\">Size</span>\r\n        </div>\r\n        <hr className=\"strip\" />\r\n        <ExtraFoodData grillItems={props.grillItems} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./Grill.css\";\r\nimport { collectItemsToDisplay } from \"../collectItemsToDisplay/collectItemsToDisplay\";\r\nimport { ProductFood } from \"../ProductFood/ProductFood\";\r\nimport { ExtraFoodTabl } from \"../ExtraFoodTabl/ExtraFoodTabl\";\r\n\r\nexport function Grill(props) {\r\n  const defaultValue = `{\r\n    \"grill\": {\r\n      \"width\": 500,\r\n      \"height\": 200,\r\n      \"grillItems\": [{\r\n        \"width\": 50,\r\n        \"height\": 30,\r\n        \"count\": 15,\r\n        \"title\": \"Steak\"\r\n      }, {\r\n        \"width\": 140,\r\n        \"height\": 140,\r\n        \"count\": 2,\r\n        \"title\": \"Sausage\"\r\n      }, {\r\n        \"width\": 130,\r\n        \"height\": 60,\r\n        \"count\": 4,\r\n        \"title\": \"Tomato\"\r\n      }, {\r\n        \"width\": 20,\r\n        \"height\": 10,\r\n        \"count\": 37,\r\n        \"title\": \"Veal\"\r\n      }]\r\n    }\r\n  }`;\r\n\r\n  let data = collectItemsToDisplay(props);\r\n  let secondIteration = {\r\n    width: props.width,\r\n    height: props.height,\r\n    grillItems: data[1].items,\r\n  };\r\n\r\n  let data2 = collectItemsToDisplay(secondIteration);\r\n  let dataInTable = data2[1].items;\r\n\r\n  return (\r\n    <div className=\"grillContainer\">\r\n      <div className=\"grillBlock\">\r\n        <div\r\n          id=\"grill\"\r\n          className=\"grill\"\r\n          style={{\r\n            width: props.width,\r\n            height: props.height,\r\n          }}\r\n        >\r\n          <div style={{ display: \"block\", height: data[0].busyHeight }}>\r\n            <ProductFood row={data[0].items} />\r\n          </div>\r\n\r\n          <div style={{ display: \"block\", height: data2[0].busyHeight }}>\r\n            <ProductFood row={data2[0].items} />\r\n          </div>\r\n        </div>\r\n        <span style={{ color: \"red\" }}>{props.errorMessage}</span>\r\n        <div className=\"textar\">\r\n          <textarea\r\n            id=\"text\"\r\n            rows=\"27\"\r\n            cols=\"68\"\r\n            defaultValue={defaultValue}\r\n            onChange={props.updateValueText}\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n\r\n      <ExtraFoodTabl grillItems={dataInTable} />\r\n    </div>\r\n  );\r\n}\r\n","import \"./AppGrillData.css\";\nimport { Grill } from \"./components/Grill/Grill\";\nimport { useState } from \"react\";\n\nfunction AppGrillData() {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [data, setData] = useState({\n    grill: {\n      width: 500,\n      height: 200,\n      grillItems: [\n        {\n          width: 50,\n          height: 30,\n          count: 15,\n          title: \"Steak\",\n        },\n        {\n          width: 140,\n          height: 140,\n          count: 2,\n          title: \"Sausage\",\n        },\n        {\n          width: 130,\n          height: 60,\n          count: 4,\n          title: \"Tomato\",\n        },\n        {\n          width: 20,\n          height: 10,\n          count: 37,\n          title: \"Veal\",\n        },\n      ],\n    },\n  });\n\n  const updateValueText = (event) => {\n    let obj;\n    try {\n      obj = JSON.parse(event.target.value);\n      setData(obj);\n      setErrorMessage(\"\");\n    } catch (error) {\n      setErrorMessage(\"Incorrect JSON format\");\n    }\n  };\n\n  if (data) {\n    const newObj = JSON.stringify(data);\n    const newData = JSON.parse(newObj);\n\n    data.grill.grillItems.map((item) => {\n      for (let i = 0; i < item.count - 1; i++) {\n        newData.grill.grillItems.push(item);\n      }\n    });\n\n    newData.grill.grillItems.sort((a, b) => {\n      return b.height - a.height;\n    });\n\n    return (\n      <Grill\n        width={newData.grill.width}\n        height={newData.grill.height}\n        errorMessage={errorMessage}\n        grillItems={newData.grill.grillItems}\n        updateValueText={updateValueText}\n      />\n    );\n  }\n}\n\nexport default AppGrillData;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppGrillData from \"./AppGrillData\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppGrillData />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}